dnl Project  : ipv6calc
dnl File     : configure.in
dnl Version  : $Id: configure.in,v 1.91 2014/06/11 05:00:34 ds6peter Exp $
dnl Copyright: 2001-2014 by Peter Bieringer <pb (at) bieringer.de>  

dnl Process this file with autoconf to produce a configure script.
AC_INIT(ipv6calc, 0.97.3, ipv6calc@deepspace6.net, ipv6calc, http://www.deepspace6.net/projects/ipv6calc.html)

AC_DEFINE(COPYRIGHT_YEAR, "2014", [Copyright year])

PACKAGE_VERSION="0.97.3"

COPYRIGHT_YEAR=2014
AC_SUBST(COPYRIGHT_YEAR)

dnl Define version header
AC_CONFIG_HEADER(config.h)

dnl Checks for programs.
AC_PROG_AWK
AC_PROG_CC
dnl AC_PROG_INSTALL
AC_PROG_RANLIB
AC_PROG_MAKE_SET

dnl Checks for header files.
AC_HEADER_STDC

dnl Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_TYPE_OFF_T
AC_TYPE_SIZE_T
AC_C_BIGENDIAN

dnl Checks for library functions.
AC_FUNC_MEMCMP
AC_CHECK_FUNCS(strspn strstr)

dnl *************************************************
dnl getopt library
dnl *************************************************
AC_ARG_ENABLE(
	[bundled-getopt],
	AS_HELP_STRING([--enable-bundled-getopt],
		[Enable bundled getopt library (default: autoselected)]),
	[
		if test "$enable_bundled_getopt" = "yes"; then
			AC_MSG_RESULT([*** use of bundled getopt library forced])
			ENABLE_BUNDLED_GETOPT=1
		else
			AC_MSG_RESULT([*** use of system getopt library forced])
		fi
	],
	[
		AC_CHECK_FUNC(getopt_long,
			[
				AC_MSG_RESULT([*** use of system getopt library autoselected])
			],
			[
				AC_MSG_RESULT([*** use of bundled getopt library autoselected])
				ENABLE_BUNDLED_GETOPT=1
			])
	])

if test "$ENABLE_BUNDLED_GETOPT" = "1"; then
	AC_LIBOBJ(../getopt/getopt)
	AC_LIBOBJ(../getopt/getopt1)
	GETOPT_INCLUDE=-I../getopt
fi

AC_SUBST(GETOPT_INCLUDE)
AC_SUBST(ENABLE_BUNDLED_GETOPT)


dnl *************************************************
dnl MD5 library
dnl *************************************************
AC_ARG_ENABLE(
	[bundled-md5],
	AS_HELP_STRING([--enable-bundled-md5],
		[Enable bundled MD5 library (default: autoselected)]),
	[
		if test "$enable_bundled_md5" = "yes"; then
			AC_MSG_RESULT([*** use of bundled MD5 library forced])
			ENABLE_BUNDLED_MD5=1
		else
			AC_MSG_RESULT([*** use of system MD5 library forced])
		fi
	],
	[
		AC_CHECK_HEADER("openssl/md5.h", [
			AC_MSG_RESULT([*** openssl/md5.h header file found])
			AC_CHECK_LIB(crypto, MD5_Init,
			[
				LDFLAGS="-lcrypto $LDFLAGS"
				AC_CHECK_FUNCS(MD5_Init MD5_Update MD5_Final,
					[
						md5_found="yes"
					],
					[
						ENABLE_BUNDLED_MD5=1
					])
				if test "$md5_found" = "yes"; then
					AC_MSG_RESULT([*** use of system MD5 library autoselected])
				else
					AC_MSG_RESULT([*** use of bundled MD5 library autoselected])
				fi
			],
			[
				AC_MSG_WARN([crypto library header files were found but not supporting required MD5 functions (will us bundled MD5 function).])
				ENABLE_BUNDLED_MD5=1
			])
		], [
			AC_MSG_WARN([openssl/md5.h header file not found (will us bundled MD5 function).])
			ENABLE_BUNDLED_MD5=1
		])
	],[
	])

if test "$ENABLE_BUNDLED_MD5" = "1"; then
	AC_LIBOBJ(../md5/md5)
	GETOPT_INCLUDE=-I../md5
	AC_DEFINE(ENABLE_BUNDLED_MD5, 1, Define if bundled MD5 should be used)
else
	LDFLAGS_EXTRA="-lcrypto $LDFLAGS_EXTRA"
	LDFLAGS_EXTRA_STATIC="-lcrypto -lz -ldl $LDFLAGS_EXTRA_STATIC"
fi

AC_SUBST(MD5_INCLUDE)
AC_SUBST(ENABLE_BUNDLED_MD5)


dnl *************************************************
dnl defaults
dnl *************************************************
geoip_db_default="/usr/share/GeoIP"
ip2location_db_default="/usr/share/IP2Location"

geoip_dyn_lib_default="libGeoIP.so.1"
ip2location_dyn_lib_default="libIP2Location.so"


dnl *************************************************
dnl Create binaries ushing shared library
dnl *************************************************
AC_ARG_ENABLE(
	[shared],
	AS_HELP_STRING([--enable-shared],
		[Enable shared library build (default: disabled)])
	)

if test "$enable_shared" = "yes"; then
	AC_MSG_RESULT([*** Shared library build enabled])
	SHARED_LIBRARY="yes"
	AC_DEFINE(SHARED_LIBRARY, 1, Define if you want ipv6calc binaries compiled with shared library libipv6calc)
	LDFLAGS_EXTRA="../lib/libipv6calc.so.$PACKAGE_VERSION ../databases/lib/libipv6calc_db_wrapper.so.$PACKAGE_VERSION $LDFLAGS_EXTRA"
	LD_LIBRARY_PATH=../lib:../databases/lib:$LD_LIBRARY_PATH
else
	SHARED_LIBRARY="no"
	IPV6CALC_LIB="-L../lib/ -L../databases/lib/ -lipv6calc -lipv6calc_db_wrapper"
fi

AC_SUBST(SHARED_LIBRARY)
AC_SUBST(IPV6CALC_LIB)


dnl *************************************************
dnl Check for dynamic loading of libraries capability
dnl *************************************************
AC_CHECK_HEADER(dlfcn.h,
	[
		AC_MSG_RESULT([*** Dynamic loading of libraries is SUPPORTED])
		DYNAMIC_LOAD_SUPPORT="yes"
	],
	[
		DYNAMIC_LOAD_SUPPORT="no"
		AC_MSG_WARN(["Dynamic loading of libraries is not supported, no header file found"])
	])

AC_ARG_ENABLE(
	[dynamic-load],
	AS_HELP_STRING([--disable-dynamic-load],
	               [Disable dynamic load of libraries (default: enabled)])
	)

if test "$enable_dynamic_load" = "yes"; then
	DYNAMIC_LOAD="no"
else
	DYNAMIC_LOAD="yes"
fi

if test "$DYNAMIC_LOAD_SUPPORT" = "yes"; then
	if test "$DYNAMIC_LOAD" = "no"; then
		AC_MSG_WARN(["Dynamic loading of libraries forced to be disabled"])
	fi
fi


dnl *************************************************
dnl disable built-in database IEEE
dnl *************************************************
AC_ARG_ENABLE([db-ieee], 
	AS_HELP_STRING([--disable-db-ieee],
		[Disable built-in IEEE database (default: enabled)]),
	[
		DB_IEEE="$enable_db_ieee"
	],[
		DB_IEEE="yes"
	])

if test "$DB_IEEE" = "yes"; then
	AC_DEFINE(SUPPORT_DB_IEEE, 1, Define if you want IEEE database included.)
fi


dnl *************************************************
dnl disable built-in database IPv4
dnl *************************************************
AC_ARG_ENABLE([db-ipv4], 
	AS_HELP_STRING([--disable-db-ipv4],
		[Disable built-in IPv4 database (default: enabled)]),
	[
		DB_IPV4="$enable_db_ipv4"
	],[
		DB_IPV4="yes"
	])

if test "$DB_IPV4" = "yes"; then
	AC_DEFINE(SUPPORT_DB_IPV4, 1, Define if you want IPv4 database included.)
fi


dnl *************************************************
dnl disable built-in database IPv6
dnl *************************************************
AC_ARG_ENABLE([db-ipv6], 
	AS_HELP_STRING([--disable-db-ipv6],
	               [Disable built-in IPv6 database (default: enabled)]),
	[
		DB_IPV6="$enable_db_ipv6"
	],
	[
		DB_IPV6="yes"
	])

if test "$DB_IPV6" = "yes"; then
	AC_DEFINE(SUPPORT_DB_IPV6, 1, Define if you want IPv6 database included.)
fi


dnl *************************************************
dnl IP2Location support
dnl *************************************************
AC_ARG_ENABLE([ip2location], 
	AS_HELP_STRING([--enable-ip2location],
		[Enable IP2Location support (default: disabled)]),
	[
		IP2LOCATION="$enable_ip2location"
	],[
		IP2LOCATION="no"
	])

AC_ARG_WITH([ip2location-headers],
	AS_HELP_STRING([--with-ip2location-headers=DIR],
		[IP2Location include files location]),
	[
		IP2LOCATION_INCLUDE="-I$with_ip2location_headers"
	])

AC_ARG_WITH([ip2location-lib],
	AS_HELP_STRING([--with-ip2location-lib=FILE],
		[IP2Location library location]),
	[
		IP2LOCATION_LIB="-L$with_ip2location_lib $IP2LOCATION_LIB"
	])

AC_ARG_WITH([ip2location-static],
	AS_HELP_STRING([--with-ip2location-static],
		[Explicitly link IP2Location statically (default=no)]),
	[
		if test "$with_ip2location_static" != "no"; then 
			IP2LOCATION_LIB="-Wl,-Bstatic $IP2LOCATION_LIB -Wl,-Bdynamic"
		fi
	])

AC_ARG_WITH([ip2location-dynamic],
	AS_HELP_STRING([--with-ip2location-dynamic],
                [Enable use of dynamic loading of IP2Location library (default=no)]),
	[
		if test "$enable_ip2location_dynamic" != "no"; then
        		IP2LOCATION_DYN="$enable_ip2location_dynamic"
		fi
	],[
		true
	])

dnl defaults for database directories
AC_ARG_WITH([ip2location-db],
	AS_HELP_STRING([--with-ip2location-db=DIR],
               [Use specified IP2Location database directory, default: /usr/share/IP2Location]),
	[
		ip2location_db="$with_ip2location_db"
	],
	[
		ip2location_db=$ip2location_db_default
	])

AC_ARG_WITH([ip2location-dyn-lib],
	AS_HELP_STRING([--with-ip2location-dyn-lib=NAME],
		[Use specified IP2Location dynamic library, default: libIP2Location.so]),
	[
		ip2location_dyn_lib="$with_ip2location_dyn_lib"
	],
	[
		ip2location_dyn_lib=$ip2location_dyn_lib_default
	])

if test "$IP2LOCATION" = "yes"; then
	CPPFLAGS="$CPPFLAGS $IP2LOCATION_INCLUDE"
	AC_MSG_RESULT([*** IP2Location support requested])

	AC_CHECK_HEADER(IP2Location.h,,
	[
		AC_MSG_ERROR([IP2Location library header files not found])
	])

	AC_MSG_RESULT([*** IP2location db dir: $ip2location_db])
	AC_DEFINE_UNQUOTED(IP2LOCATION_DB, "$ip2location_db", Define IP2Location database directory.)

	if test "$IP2LOCATION_DYN" != "yes"; then
		AC_CHECK_LIB(IP2Location,IP2Location_open,
		[
			AC_DEFINE(SUPPORT_IP2LOCATION, 1, Define if you want IP2Location support.)
		],
		[
			AC_MSG_ERROR([IP2Location library header files were found but the library was not found])
		])

		IP2LOCATION_LIB="-lIP2Location"
		LDFLAGS="$LDFLAGS $IP2LOCATION_LIB"

		if test "$IP2LOCATION_STATIC" = "yes"; then
			AC_DEFINE(SUPPORT_IP2LOCATION_STATIC, 1, Define if you want IP2Location support statically linked - requires also additional linker options.)
		fi

		AC_CHECK_LIB(IP2Location, IP2Location_open,
		[
			AC_DEFINE(SUPPORT_IP2LOCATION, 1, Define if you want IP2Location support.)
			AC_MSG_RESULT([*** IP2Location support enabled])
		],
		[
			AC_MSG_ERROR([IP2Location library header files were found but the library was not found])
		])
	else
		# wrapper detects by itself the real support
		AC_MSG_RESULT([*** IP2Location dyn lib: $ip2location_dyn_lib])
		AC_DEFINE_UNQUOTED(IP2LOCATION_DYN_LIB, "$ip2location_dyn_lib", Define IP2Location dynamic library.)

		AC_MSG_RESULT([*** IP2Location support will be implemented by using dynamic load of library])
		AC_DEFINE(SUPPORT_IP2LOCATION, 1, Define if you want IP2Location support.)
		AC_DEFINE(SUPPORT_IP2LOCATION_DYN, 1, Define if you want IP2Location support with dynamic loading support - requires also additional linker options.)
	fi
fi

AC_SUBST(IP2LOCATION_INCLUDE)
AC_SUBST(IP2LOCATION_LIB)
AC_SUBST(IP2LOCATION_DB)
AC_SUBST(IP2LOCATION_DYN_LIB)


dnl *************************************************
dnl GeoIP support
dnl *************************************************
AC_ARG_ENABLE([geoip], 
	AS_HELP_STRING([--enable-geoip],
	               [Enable GeoIP support (default: disabled)]),
	[
		if test "$enable_geoip" != "no"; then
			GEOIP="$enable_geoip"
		fi
	],[
		GEOIP="no"
	])

AC_ARG_WITH([geoip-headers],
	AS_HELP_STRING([--with-geoip-headers=DIR],
                   [GeoIP include files location]),
	[
		GEOIP_INCLUDE="-I$with_geoip_headers"
	])

AC_ARG_WITH([geoip-lib],
	AS_HELP_STRING([--with-geoip-lib=DIR],
                   [GeoIP library location]),
	[
		GEOIP_LIB="-L$with_geoip_lib $GEOIP_LIB"
	])

AC_ARG_WITH([geoip-static],
	AS_HELP_STRING([--with-geoip-static],
                   [Explicitly link GeoIP statically (default=no)]),
	[
		if test "$with_geoip_static" != "no"; then 
			GEOIP_STATIC="$with_geoip_static"
			GEOIP_LIB="-Wl,-Bstatic $GEOIP_LIB -Wl,-Bdynamic"
		fi
	],[
		GEOIP_STATIC="no"
	])

AC_ARG_WITH([geoip-dynamic],
	AS_HELP_STRING([--with-geoip-dynamic],
                   [Enable use of dynamic loading of GeoIP library (default=no)]),
	[
		if test "$with_geoip_dynamic" != "no"; then
			GEOIP_DYN="$with_geoip_dynamic"
		fi
	],[
		true
	])

AC_ARG_WITH([geoip-db],
	AS_HELP_STRING([--with-geoip-db=DIR],
		[Use specified GeoIP database directory, default: /usr/share/GeoIP]),
	[
		geoip_db="$with_geoip_db"
	],
	[
		geoip_db=$geoip_db_default
	])

AC_ARG_WITH([geoip-dyn-lib],
	AS_HELP_STRING([--with-geoip-dyn-lib=NAME],
		[Use specified GeoIP dynamic library, default: libGeoIP.so.1]),
	[
		geoip_dyn_lib="$with_geoip_dyn_lib"
	],
	[
		geoip_dyn_lib=$geoip_dyn_lib_default
	])

AC_ARG_WITH([geoip-ipv6-compat],
	AS_HELP_STRING([--with-geoip-ipv6-compat],
		[Use IPv6 interface of GeoIP in compatibility mode (supporting 1.4.5)]),
	[
		if test "$with_geoip_ipv6_compat" != "no"; then 
			GEOIP_COMPAT="yes",
		fi
	],[
		GEOIP_COMPAT="no"
	])

# Automagic enable GeoIP if dynamic load is available (TODO: enable later by default??)
#if test "$DYNAMIC_LOAD" = "yes"; then
#	if test "$GEOIP_DYN" = "no"; then
#		true
#	else
#	    AC_CHECK_HEADER(GeoIP.h,
#		    [
#			    AC_MSG_RESULT(["*** GeoIP library header files found and dynamic library support enabled, enable GeoIP"])
#			    GEOIP="yes"
#			    GEOIP_DYN="yes"
#		    ],
#		    [
#		    ])
#	fi
#fi

if test "$GEOIP" = "yes"; then
	CPPFLAGS="$CFLAGS $GEOIP_INCLUDE"
	AC_MSG_RESULT([*** GeoIP support requested])

	AC_CHECK_HEADER(GeoIP.h,,
	[
		AC_MSG_ERROR([GeoIP library header files not found])
	])

	AC_MSG_RESULT([*** GeoIP db: $geoip_db])
	AC_DEFINE_UNQUOTED(GEOIP_DB, "$geoip_db", Define GeoIP database directory.)

	if test "$GEOIP_DYN" != "yes"; then
		if test "$GEOIP_STATIC" = "yes"; then
			AC_DEFINE(SUPPORT_GEOIP_STATIC, 1, Define if you want GeoIP support statically linked - requires also additional linker options.)
		fi

		GEOIP_LIB="-lGeoIP"
		LDFLAGS="$LDFLAGS $GEOIP_LIB"

		AC_CHECK_LIB(GeoIP, GeoIP_open,
		[
			AC_DEFINE(SUPPORT_GEOIP, 1, Define if you want GeoIP support.)
			AC_MSG_RESULT([*** GeoIP support enabled])
		],
		[
			AC_MSG_ERROR([GeoIP library header files were found but the library was not found])
		])

		AC_CHECK_LIB(GeoIP, GeoIP_country_code_by_ipnum_v6,
		[
			AC_DEFINE(SUPPORT_GEOIP_V6, 1, Define if you want GeoIP IPv6 support.)
			AC_MSG_RESULT([*** GeoIP IPv6 support enabled])
		],
		[
			AC_MSG_WARN([GeoIP library header files were found but not supporting IPv6 (upgrade to GeoIP 1.4.5 or newer for enabling IPv6 support)])
		])

		if test "$GEOIP_COMPAT" = "no"; then
			AC_CHECK_LIB(GeoIP, GeoIP_lib_version,
			[
				AC_DEFINE(SUPPORT_GEOIP_LIB_VERSION, 1, Define if your GeoIP version supports GeoIP_lib_version.)
			],
			[
				AC_MSG_WARN([GeoIP library header files were found but not supporting GeoIP_lib_version (upgrade to newer version for support).])
			])

			AC_CHECK_LIB(GeoIP, GeoIP_country_code_by_addr_v6,
			[
				AC_DEFINE(SUPPORT_GEOIP_COUNTRY_CODE_BY_ADDR_V6, 1, Define if your GeoIP version supports GeoIP_country_code_by_addr_v6.)
			],
			[
			    AC_MSG_WARN([GeoIP library header files were found but not supporting GeoIP_country_code_by_addr_v6 (will use workaround).])
			])

			AC_CHECK_LIB(GeoIP, GeoIP_country_name_by_addr_v6,
			[
				AC_DEFINE(SUPPORT_GEOIP_COUNTRY_NAME_BY_ADDR_V6, 1, Define if your GeoIP version supports GeoIP_country_name_by_addr_v6.)
			],
			[
				AC_MSG_WARN([GeoIP library header files were found but not supporting GeoIP_country_name_by_addr_v6 (will use workaround).])
			])

			AC_CHECK_LIB(GeoIP, GeoIP_cleanup,
			[
				AC_DEFINE(SUPPORT_GEOIP_CLEANUP, 1, Define if your GeoIP version supports GeoIP_cleanup.)
			],
			[
				AC_MSG_WARN([GeoIP library header files were found but not supporting GeoIP_cleanup (will use workaround).])
			])
		else
			AC_MSG_WARN([GeoIP IPv6 support compatibility mode enabled (supporting 1.4.5).])
		fi
	else
		# wrapper detects by itself the real support
		AC_MSG_RESULT([*** GeoIP dyn lib: $geoip_dyn_lib])
		AC_DEFINE_UNQUOTED(GEOIP_DYN_LIB, "$geoip_dyn_lib", Define GeoIP dynamic library.)

		AC_MSG_RESULT([*** GeoIP support will be implemented by using dynamic load of library])
		AC_DEFINE(SUPPORT_GEOIP, 1, Define if you want GeoIP support.)
		AC_DEFINE(SUPPORT_GEOIP_V6, 1, Define if you want GeoIP IPv6 support.)
		AC_DEFINE(SUPPORT_GEOIP_DYN, 1, Define if you want GeoIP support with dynamic loading support - requires also additional linker options.)
	fi
fi

AC_SUBST(GEOIP_INCLUDE)
AC_SUBST(GEOIP_LIB)
AC_SUBST(GEOIP_DB)
AC_SUBST(GEOIP_DYN_LIB)


dnl *************************************************
dnl Dynamic load used?
dnl *************************************************
if test "$DYNAMIC_LOAD" = "yes"; then
	if test "$GEOIP_DYN" = "yes" -o "$IP2LOCATION_DYN" = "yes"; then
		DYNAMIC_LOAD="yes"
		AC_MSG_RESULT([*** Dynamic loading of libraries is ENABLED])
		DYNLOAD_LIB="-rdynamic -ldl"
	fi
fi

AC_SUBST(DYNLOAD_LIB)


dnl *************************************************
dnl Files to create from <file>.in
dnl *************************************************
AC_SUBST(LDFLAGS_EXTRA)
AC_SUBST(LDFLAGS_EXTRA_STATIC)
AC_SUBST(LD_LIBRARY_PATH)

AC_OUTPUT([
		Makefile
		md5/Makefile
		tools/Makefile
		getopt/Makefile
		ipv6calc/Makefile
		lib/Makefile
		man/Makefile
		databases/lib/Makefile
		ipv6logconv/Makefile
		ipv6loganon/Makefile
		ipv6logstats/Makefile
		ipv6calcweb/Makefile
		contrib/ipv6calc.spec
		VERSION
	])

AC_MSG_RESULT([*** LDFLAGS_EXTRA: $LDFLAGS_EXTRA])
AC_MSG_RESULT([*** LD_LIBRARY_PATH: $LD_LIBRARY_PATH])

